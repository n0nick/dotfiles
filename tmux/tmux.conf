# start window numbering at 1
set -g base-index 1

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

set -g monitor-activity off
set -g visual-activity off

# Style!
set -g status "on"
set -g status-style "bg=colour254,none"
set -g status-left "[#S]"
set -g status-left-style "fg=colour240"
set -g status-right " #[fg=colour60]#h #[fg=colour25]%Y-%m-%d %H:%M "
set -g status-right-style "bg=colour250"
set -g message-style "fg=colour254,bg=colour245"
set -g message-command-style "fg=colour254,bg=colour245"
set -g pane-active-border-style "fg=colour241"
set -g pane-border-style "fg=colour245"
setw -g window-status-style "fg=colour240,bg=colour254,none"
setw -g window-status-format " #I #W "
setw -g window-status-current-style "fg=colour255,bg=colour245,none"
setw -g window-status-current-format " #I #[bold]#W "
setw -g window-status-activity-style "fg=colour241,bg=colour254,none"

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
bind-key C-a last-window

#######

# Vi: split windows
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind s
bind s split-window -v
unbind v
bind v split-window -h

# Vi: move around panels with M-hjkl
# make sure that Left option key in iTerm2 settings is set to "+Esc"
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Vi: copy mode
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy y copy-selection
bind-key C-y send-keys y\; run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"\; display-message "copied"

# C-k/j: page up/down {{{1
bind-key -t vi-copy C-k page-up
bind-key -t vi-copy C-j page-down
bind C-k copy-mode -u

bind h previous-window
bind j swap-pane -D
bind k swap-pane -U
bind l next-window

# Resize panes {{{1
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

bind-key -n M-H resize-pane -L 7
bind-key -n M-J resize-pane -D 7
bind-key -n M-K resize-pane -U 7
bind-key -n M-L resize-pane -R 7

bind-key -n M-[ previous-window
bind-key -n M-] next-window

# Misc keybindings
bind-key a send-prefix
bind S choose-session
bind c-[ copy-mode
bind c-] paste-buffer

bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# Persist last directory when opening a new shell {{{1
bind-key c new-window -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# smart pane switching with awareness of vim splits
# http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Move windows around
# http://superuser.com/a/552493/30808
bind H swap-window -t -1
bind L swap-window -t +1

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
